{"version":3,"file":"index.js","sources":["../src/object-fo-form-data.ts"],"sourcesContent":["const isUndefined = (value: any) => value === undefined;\n\nconst isNull = (value: any) => value === null;\n\nconst isObject = (value: any) => value === Object(value);\n\nconst isArray = (value: any) => Array.isArray(value);\n\nconst isDate = (value: any) => value instanceof Date;\n\nconst isBlob = (value: any) =>\n    value && typeof value.size === 'number' && typeof value.type === 'string' && typeof value.slice === 'function';\n\nconst isFile = (value: any) =>\n    isBlob(value) &&\n    typeof value.name === 'string' &&\n    (typeof value.lastModifiedDate === 'object' || typeof value.lastModified === 'number');\n\nexport const objectToFormData = (obj: any, cfg?: any, fd?: any, pre?: any): FormData => {\n    cfg = cfg || {};\n    cfg.indices = isUndefined(cfg.indices) ? false : cfg.indices;\n    cfg.nullsAsUndefineds = isUndefined(cfg.nullsAsUndefineds) ? false : cfg.nullsAsUndefineds;\n    fd = fd || new FormData();\n\n    if (isUndefined(obj)) {\n        return fd;\n    } else if (isNull(obj)) {\n        if (!cfg.nullsAsUndefineds) {\n            fd.append(pre, '');\n        }\n    } else if (isArray(obj)) {\n        if (!obj.length) {\n            const key = pre + '[]';\n\n            fd.append(key, '');\n        } else {\n            obj.forEach((value: any, index: any) => {\n                const key = pre + '[' + (cfg.indices ? index : '') + ']';\n\n                objectToFormData(value, cfg, fd, key);\n            });\n        }\n    } else if (isDate(obj)) {\n        fd.append(pre, obj.toISOString());\n    } else if (isObject(obj) && !isFile(obj) && !isBlob(obj)) {\n        Object.keys(obj).forEach(prop => {\n            const value = obj[prop];\n\n            if (isArray(value)) {\n                while (prop.length > 2 && prop.lastIndexOf('[]') === prop.length - 2) {\n                    prop = prop.substring(0, prop.length - 2);\n                }\n            }\n\n            const key = pre ? pre + '[' + prop + ']' : prop;\n\n            objectToFormData(value, cfg, fd, key);\n        });\n    } else {\n        fd.append(pre, obj);\n    }\n\n    return fd;\n};\n"],"names":["isUndefined","value","undefined","isArray","Array","isBlob","size","type","slice","objectToFormData","obj","cfg","fd","pre","indices","nullsAsUndefineds","FormData","append","length","forEach","index","key","Date","isDate","Object","isObject","name","lastModifiedDate","lastModified","isFile","keys","prop","lastIndexOf","substring","toISOString"],"mappings":"AAAA,IAAMA,EAAc,SAACC,GAAe,YAAUC,IAAVD,GAM9BE,EAAU,SAACF,GAAe,OAAAG,MAAMD,QAAQF,IAIxCI,EAAS,SAACJ,GACZ,OAAAA,GAA+B,iBAAfA,EAAMK,MAA2C,iBAAfL,EAAMM,MAA4C,mBAAhBN,EAAMO,OAOjFC,EAAmB,SAACC,EAAUC,EAAWC,EAAUC,GAM5D,IALAF,EAAMA,GAAO,IACTG,SAAUd,EAAYW,EAAIG,UAAmBH,EAAIG,QACrDH,EAAII,mBAAoBf,EAAYW,EAAII,oBAA6BJ,EAAII,kBACzEH,EAAKA,GAAM,IAAII,SAEXhB,EAAYU,GACZ,OAAOE,EACJ,GAxB8B,OAwBnBF,EACTC,EAAII,mBACLH,EAAGK,OAAOJ,EAAK,SAEhB,GAAIV,EAAQO,GACf,GAAKA,EAAIQ,OAKLR,EAAIS,SAAQ,SAAClB,EAAYmB,GACrB,IAAMC,EAAMR,EAAM,KAAOF,EAAIG,QAAUM,EAAQ,IAAM,IAErDX,EAAiBR,EAAOU,EAAKC,EAAIS,UARxB,CACb,IAAMA,EAAMR,EAAM,KAElBD,EAAGK,OAAOI,EAAK,SA1BZ,SAACpB,GAAe,OAAAA,aAAiBqB,KAkCjCC,CAAOb,IAtCL,SAACT,GAAe,OAAAA,IAAUuB,OAAOvB,GAwCnCwB,CAASf,IA/BT,SAACT,GACZ,OAAAI,EAAOJ,IACe,iBAAfA,EAAMyB,OACsB,iBAA3BzB,EAAM0B,kBAA+D,iBAAvB1B,EAAM2B,cA4B/BC,CAAOnB,IAASL,EAAOK,GAehDE,EAAGK,OAAOJ,EAAKH,GAdfc,OAAOM,KAAKpB,GAAKS,SAAQ,SAAAY,GACrB,IAAM9B,EAAQS,EAAIqB,GAElB,GAAI5B,EAAQF,GACR,KAAO8B,EAAKb,OAAS,GAAKa,EAAKC,YAAY,QAAUD,EAAKb,OAAS,GAC/Da,EAAOA,EAAKE,UAAU,EAAGF,EAAKb,OAAS,GAM/CT,EAAiBR,EAAOU,EAAKC,EAFjBC,EAAMA,EAAM,IAAMkB,EAAO,IAAMA,MAX/CnB,EAAGK,OAAOJ,EAAKH,EAAIwB,eAmBvB,OAAOtB"}